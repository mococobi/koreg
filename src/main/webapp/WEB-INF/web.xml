<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee;http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
      
    <display-name>Web Tier</display-name>

    <!-- 모든 서블릿들과 filter 들에 의해 공유되는 root spring container를 정의하는 곳 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring/root-context.xml</param-value>
    </context-param>
    <!-- 모든 서블릿들과 필터들에게 공유되는 Spring Container를 생성  -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 애플리케이션 요청을 처리하는 부분 -->
    <listener>  
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>  
    <servlet>
        <servlet-name>appServlet</servlet-name>
        <!-- 스프링에 내장된 서블릿 클래스  -->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/appServlet/servlet-context.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- DispatcherServlet 기존의 mstr에 영향을 주지 않아야 한다-->
    <servlet-mapping>
        <servlet-name>appServlet</servlet-name>
        <url-pattern>/app/*</url-pattern>
    </servlet-mapping>
	    
	<filter>
		<filter-name>SessionFilter</filter-name>
		<filter-class>com.mococo.web.filter.SessionFilter</filter-class>
    	<init-param>
			<param-name>entryPoints</param-name>
			<param-value>.*/login/.*\.do$;.*/login/.*\.json$;</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>SessionFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SessionFilter</filter-name>
		<url-pattern>*.json</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SessionFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	
	
	<!-- 에러 페이지 처리 -->
	<error-page>
    	<error-code>404</error-code>
    	<location>/app/error/error404</location>
	</error-page>
    <error-page>
    	<error-code>500</error-code>
    	<location>/app/error/error500</location>
	</error-page>
	
	
	
    <context-param>
          	
        <!--
  		This value is only used if you meet all of the following deployment criteria:
  		1) J2EE
  		2) unexploded deployments
  		3) more than one deployment

  		Each deployment must have a unique contextPath. Required
  		as an interim measure until our baseline is Servlet API 2.5.
  	-->
          	
        <param-name>contextPath</param-name>
          	
        <param-value/>
          
    </context-param>
      
    <context-param>
        		
        <param-name>spring.main.allow-bean-definition-overriding</param-name>
        		
        <param-value>true</param-value>
          
    </context-param>
      
  
    <filter>
            
        <filter-name>crlfResponseFilter</filter-name>
            
        <filter-class>com.microstrategy.web.filter.CrlfResponseFilter</filter-class>
          
    </filter>
      
    <filter-mapping>
            
        <filter-name>crlfResponseFilter</filter-name>
            
        <url-pattern>/*</url-pattern>
          
    </filter-mapping>
      
    <filter>
            
        <filter-name>redirectResponseFilter</filter-name>
            
        <filter-class>com.microstrategy.web.filter.RedirectResponseFilter</filter-class>
            
        <init-param>
                  
            <param-name>allowedProtocols</param-name>
                  
            <param-value>*</param-value>
                
        </init-param>
            
        <init-param>
                  
            <param-name>domains</param-name>
                  
            <param-value>*</param-value>
                
        </init-param>
          
    </filter>
      
    <filter-mapping>
            
        <filter-name>redirectResponseFilter</filter-name>
            
        <url-pattern>/*</url-pattern>
          
    </filter-mapping>
      
    <filter>
            
        <filter-name>cookieProcessorFilter</filter-name>
            
        <filter-class>com.microstrategy.web.filter.WebCookieProcessorFilter</filter-class>
            
        <init-param>
                  
            <param-name>sameSite</param-name>
                  
            <!-- UNSET, STRICT, LAX, NONE -->
                  
            <param-value>UNSET</param-value>
                
        </init-param>
            
    
        <init-param>
                  
            <param-name>httpOnly</param-name>
                  
            <param-value>true</param-value>
                
        </init-param>
            
        <init-param>
                  
            <param-name>secure</param-name>
                  
            <param-value/>
                
        </init-param>
            
        <init-param>
                  
            <param-name>bSet.httpOnly</param-name>
                  
            <param-value>false</param-value>
                
        </init-param>
          
    </filter>
      
    <filter-mapping>
          
        <filter-name>cookieProcessorFilter</filter-name>
            
        <url-pattern>/*</url-pattern>
          
    </filter-mapping>
     
  
    <listener>
            
        <listener-class>com.microstrategy.web.filter.CookieProcessorFilter$ServletEventListenerForSessionCookieConfig</listener-class>
          
    </listener>
      
  
    <filter>
            
        <filter-name>clientIDFilter</filter-name>
            
        <filter-class>com.microstrategy.web.filter.ClientIDFilter</filter-class>
            
        <init-param>
                  
            <param-name>mode</param-name>
                  
            <!-- PROXY, DEFAULT, DISABLED -->
                  
            <param-value>DEFAULT</param-value>
                
        </init-param>
          
    </filter>
      
    <filter-mapping>
            
        <filter-name>clientIDFilter</filter-name>
            
        <url-pattern>/*</url-pattern>
          
    </filter-mapping>
      
    <filter>
            
        <filter-name>resourceAccessConstraintFilter</filter-name>
            
        <filter-class>com.microstrategy.web.filter.ResourceAccessConstraintFilter</filter-class>
          
    </filter>
      
    <filter-mapping>
            
        <filter-name>resourceAccessConstraintFilter</filter-name>
            
        <url-pattern>/plugins/*</url-pattern>
          
    </filter-mapping>
      
    <!-- ================== Auth Filter Support ================ -->
        
    <context-param>
        		    
        <param-name>adminUrls</param-name>
                
        <param-value>/servlet/mstrWebAdmin;/servlet/mstrWeb/mstrWebAdmin;/saml/config/**;/servlet/taskAdmin</param-value>
            
    </context-param>
            
   
    <filter>
        	
        
        <filter-name>adminAuthFilter</filter-name>
        	
        
        <filter-class>com.microstrategy.auth.admin.MstrAdminAuthFilter</filter-class>
        	
    
    </filter>
    	
    
    <filter-mapping>
        	
        
        <filter-name>adminAuthFilter</filter-name>
        	
        
        <url-pattern>/*</url-pattern>
        	
    
    </filter-mapping>
    	

    <!-- 
    <filter>
                
        <filter-name>springSecurityFilterChain</filter-name>
                
        <filter-class>com.microstrategy.auth.MstrSpringFilterChain</filter-class>
            
    </filter>
        
    <filter-mapping>
                
        <filter-name>springSecurityFilterChain</filter-name>
                
        <url-pattern>/*</url-pattern>
            
    </filter-mapping>
    --> 	
    <!-- ===================== SAML Config GUI ================ -->
    <!--     
    <servlet>
                
        <servlet-name>samlConfig</servlet-name>
                
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
                
        <multipart-config>
                      
            <max-file-size>5242880</max-file-size>
                      
            <max-request-size>10485760</max-request-size>
                      
            <file-size-threshold>5242880</file-size-threshold>
                	
        </multipart-config>
            
    </servlet>
        
    <servlet-mapping>
                
        <servlet-name>samlConfig</servlet-name>
                
        <url-pattern>/saml/*</url-pattern>
            
    </servlet-mapping>
    -->  
    <!-- End SAML Config GUI -->
      
    <!-- SPNEGO Integrated Authentication/Kerberos - uncomment <filter> & pick appropriate <filter-mapping> below...
  <filter>
    <display-name>SpnegoFilter</display-name>
    <filter-name>SpnegoFilter</filter-name>
    <filter-class>com.microstrategy.web.filter.SpnegoFilter</filter-class>
  </filter>
  -->
      
    <!-- SPNEGO Integrated Authentication/Kerberos: uncomment for MicroStrategy Web
  <filter-mapping>
    <filter-name>SpnegoFilter</filter-name>
    <servlet-name>mstrWeb</servlet-name>
    <servlet-name>TaskProcessorServlet</servlet-name>
  </filter-mapping>
  -->
      
    <!-- SPNEGO Integrated Authentication/Kerberos: uncomment for MicroStrategy Mobile
  <filter-mapping>
    <filter-name>SpnegoFilter</filter-name>
    <servlet-name>mstrWeb</servlet-name>
    <servlet-name>TaskProcessorServlet</servlet-name>
    <servlet-name>MobileServlet</servlet-name>
  </filter-mapping>
  -->
      
  
    <filter>
              
        <filter-name>ExpireHeader</filter-name>
              
        <filter-class>com.microstrategy.web.filter.ExpireHeaderFilter</filter-class>
          
    </filter>
      
    <filter>
              
        <filter-name>VIImageExpireHeader</filter-name>
              
        <filter-class>com.microstrategy.web.filter.VIImageExpireHeaderFilter</filter-class>
          
    </filter>
      
    <filter-mapping>
              
        <filter-name>ExpireHeader</filter-name>
              
        <url-pattern>*.js</url-pattern>
          
    </filter-mapping>
      
    <filter-mapping>
              
        <filter-name>ExpireHeader</filter-name>
              
        <url-pattern>*.css</url-pattern>
          
    </filter-mapping>
      
    <filter-mapping>
              
        <filter-name>VIImageExpireHeader</filter-name>
              
        <url-pattern>/javascript/mojo/css/vi/images/*</url-pattern>
              
        <url-pattern>/javascript/react/images/*</url-pattern>
          
    </filter-mapping>
      
    <filter>
              
        <filter-name>GlobalHeaders</filter-name>
              
        <filter-class>com.microstrategy.web.filter.GlobalHeadersFilter</filter-class>
         
      
        <!-- US112207: Stop using properties file for configuring HTTP headers -->
        	  
        <init-param>
                  	
            <param-name>headerConfig</param-name>
            		
            <!-- param-value should be a comma-separated list of headers and 
		their respective values. If a header value contains a comma, escape
		the header name and value within quotes. Example:
		h1 : v1,
		h2 : v2,
		"h3 : v3a, v3b, v3c",
		h4 : v4
		-->
                  	
            <param-value>
          X-XSS-Protection:1; mode=block,
          X-Content-Type-Options : nosniff,
          Content-Security-Policy: base-uri 'self'; default-src 'self'; object-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' http: https:; style-src 'self' 'unsafe-inline' 'unsafe-eval' blob: http: https:; connect-src 'self' * ws: wss: blob:; worker-src 'self' * data: blob:; font-src 'self' * data: blob:; frame-src 'self' * data: blob: about: mailto: mstrapp: dossier:; img-src 'self' * data: blob: about:; media-src 'self' * data: blob: rtsp: rtmp:; child-src 'self' * data: blob:;,
      	</param-value>
                  
        </init-param>
          
    </filter>
      
    <filter-mapping>
              
        <filter-name>GlobalHeaders</filter-name>
              
        <url-pattern>/*</url-pattern>
          
    </filter-mapping>
      
    <filter>
              
        <filter-name>WebCacheControlHeaders</filter-name>
              
        <filter-class>com.microstrategy.web.filter.GlobalHeadersFilter</filter-class>
              
        <!-- DE158278: Disable caching for security enhancement -->
        	  
        <init-param>
                  	
            <param-name>headerConfig</param-name>
                  	
            <param-value>
          "Cache-Control : no-cache, no-store, max-age=0, must-revalidate, proxy-revalidate, no-transform",
          Pragma: no-cache,
          Expires: 0
      	</param-value>
                  
        </init-param>
          
    </filter>
      
    <filter-mapping>
              
        <filter-name>WebCacheControlHeaders</filter-name>
              
        <url-pattern>/servlet/*</url-pattern>
          
    </filter-mapping>
      
    <servlet>
            
        <servlet-name>mstrDocumentImages</servlet-name>
            
        <servlet-class>com.microstrategy.web.servlets.DocumentImageServlet</servlet-class>
          
    </servlet>
      
    <servlet>
            
        <display-name>Main Servlet</display-name>
            
        <servlet-name>mstrWeb</servlet-name>
            
        <servlet-class>com.microstrategy.web.servlets.MainServlet</servlet-class>
            
        <load-on-startup>1</load-on-startup>
          
    </servlet>
      
    <servlet>
            
        <servlet-name>mstrWeb72GraphLoader</servlet-name>
            
        <servlet-class>com.microstrategy.web.servlets.OldLinksServlet</servlet-class>
          
    </servlet>
      
    <servlet>
            
        <servlet-name>mstrWeb72RebuildReport</servlet-name>
            
        <servlet-class>com.microstrategy.web.servlets.OldLinksServlet</servlet-class>
          
    </servlet>
      
    <servlet>
            
        <display-name>Web Administration Servlet</display-name>
            
        <servlet-name>mstrWebAdmin</servlet-name>
            
        <servlet-class>com.microstrategy.web.servlets.MainServlet</servlet-class>
            
        <security-role-ref>
                  
            <role-name>ADMIN</role-name>
                  
            <role-link>admin</role-link>
                
        </security-role-ref>
          
    </servlet>
      
    <servlet>
            
        <display-name>Intelligence-Server Administration Servlet</display-name>
            
        <servlet-name>mstrServerAdmin</servlet-name>
            
        <servlet-class>com.microstrategy.web.servlets.MainServlet</servlet-class>
          
    </servlet>
      
    <servlet>
            
        <description>This is the Servlet that handles all AJAX-style requests from browser clients.</description>
            
        <display-name>TaskProcessorServlet</display-name>
            
        <servlet-name>TaskProcessorServlet</servlet-name>
            
        <servlet-class>com.microstrategy.web.servlets.TaskProcessorServlet</servlet-class>
            
        <load-on-startup>10</load-on-startup>
          
    </servlet>
      
    <servlet>
            
        <description>This is the Servlet that provides tool interface for task developers to discover and test tasks.</description>
            
        <display-name>TaskViewerServlet</display-name>
            
        <servlet-name>TaskViewerServlet</servlet-name>
            
        <servlet-class>com.microstrategy.web.servlets.TaskViewerServlet</servlet-class>
            
        <load-on-startup>20</load-on-startup>
          
    </servlet>
      
    <servlet>
            
        <description>This is the Servlet that handles administrative tasks.</description>
            
        <display-name>TaskAdminServlet</display-name>
            
        <servlet-name>TaskAdminServlet</servlet-name>
            
        <servlet-class>com.microstrategy.web.servlets.TaskAdminServlet</servlet-class>
            
        <load-on-startup>30</load-on-startup>
          
    </servlet>
      
  
    <servlet>
            
        <display-name>ResourceFeed</display-name>
            
        <servlet-name>ResourceFeed</servlet-name>
            
        <servlet-class>com.microstrategy.web.servlets.ResourceFeed</servlet-class>
            
        <load-on-startup>11</load-on-startup>
          
    </servlet>
      
    <servlet>
            
        <servlet-name>HealthServlet</servlet-name>
            
        <jsp-file>/jsp/health.jsp</jsp-file>
          
    </servlet>
      
    <!--mapping-->
      
    <servlet-mapping>
            
        <servlet-name>HealthServlet</servlet-name>
            
        <url-pattern>/health</url-pattern>
          
    </servlet-mapping>
      
  
    <servlet-mapping>
            
        <servlet-name>TaskProcessorServlet</servlet-name>
            
        <url-pattern>/servlet/taskProc</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>TaskAdminServlet</servlet-name>
            
        <url-pattern>/servlet/taskAdmin</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>TaskViewerServlet</servlet-name>
            
        <url-pattern>/servlet/taskViewer</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>mstrDocumentImages</servlet-name>
            
        <url-pattern>/servlet/Images/*</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>mstrDocumentImages</servlet-name>
            
        <url-pattern>/servlet/savedImages/*</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>mstrWeb72GraphLoader</servlet-name>
            
        <url-pattern>/servlet/MSIGraphLoader.asp</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>mstrWeb72RebuildReport</servlet-name>
            
        <url-pattern>/servlet/RebuildReport.asp</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>mstrDocumentImages</servlet-name>
            
        <url-pattern>/servlet/images/*</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>mstrWeb</servlet-name>
            
        <url-pattern>/servlet/mstrWeb</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>mstrWeb</servlet-name>
            
        <url-pattern>/export/*</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>mstrWeb</servlet-name>
            
        <url-pattern>/saml/SingleLogout</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>mstrWebAdmin</servlet-name>
            
        <url-pattern>/servlet/mstrWebAdmin</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>ResourceFeed</servlet-name>
            
        <url-pattern>/servlet/resourceFeed</url-pattern>
          
    </servlet-mapping>
      
    <servlet-mapping>
            
        <servlet-name>mstrServerAdmin</servlet-name>
            
        <url-pattern>/servlet/mstrServerAdmin</url-pattern>
          
    </servlet-mapping>
      
    <session-config>
            
        <session-timeout>30</session-timeout>
          
    </session-config>
      
    <mime-mapping>
            
        <extension>css</extension>
            
        <mime-type>text/css</mime-type>
          
    </mime-mapping>
      
    <jsp-config>
          
        <taglib>
                
            <taglib-uri>/webUtilTL.tld</taglib-uri>
                
            <taglib-location>/WEB-INF/tlds/webUtilTL.tld</taglib-location>
              
        </taglib>
          
    </jsp-config>
      

    <security-constraint>
            
        <web-resource-collection>
                  
            <web-resource-name>TaskDeveloper</web-resource-name>
                  
            <url-pattern>/servlet/taskViewer</url-pattern>
                  
            <url-pattern>/servlet/taskViewer/*</url-pattern>
                
        </web-resource-collection>
            
        <user-data-constraint>
                  
            <transport-guarantee>NONE</transport-guarantee>
                
        </user-data-constraint>
          
    </security-constraint>
      
    <!-- TQMS #859156 -->
      
    <security-constraint>
        		
        <web-resource-collection>
            			
            <web-resource-name>No HTTP access</web-resource-name>
            			
            <url-pattern>/jsp/*</url-pattern>
            			
            <url-pattern>/plugins/_Interface/jsp/*</url-pattern>
            			
            <url-pattern>/plugins/_Interface/WEB-INF/*</url-pattern>
            		
        </web-resource-collection>
        		
        <auth-constraint/>
            
        <user-data-constraint>
                  
            <transport-guarantee>NONE</transport-guarantee>
                
        </user-data-constraint>
          
    </security-constraint>
        
    <security-constraint>
                
        <web-resource-collection>
                        
            <web-resource-name>esri access</web-resource-name>
                        
            <url-pattern>/jsp/esriproxy.jsp</url-pattern>
                    
        </web-resource-collection>
                 
        <auth-constraint>
                    
            <role-name>*</role-name>
                
        </auth-constraint>
            
        <user-data-constraint>
                  
            <transport-guarantee>NONE</transport-guarantee>
                
        </user-data-constraint>
          
    </security-constraint>
    	
    <security-constraint>
        		
        <web-resource-collection>
            			
            <web-resource-name>restricted methods</web-resource-name>
            			
            <url-pattern>/*</url-pattern>
            			
            <http-method>HEAD</http-method>
            			
            <http-method>OPTIONS</http-method>
            		
        </web-resource-collection>
        		
        <auth-constraint/>
        	
    </security-constraint>
      
    <login-config>
            
        <auth-method>BASIC</auth-method>
            
        <realm-name>Administrator Authentication Area</realm-name>
          
    </login-config>
      
    <security-role>
            
        <role-name>admin</role-name>
          
    </security-role>
      
    <security-role>
            
        <role-name>taskDeveloper</role-name>
          
    </security-role>
      
    <listener>
            
        <listener-class>
    com.microstrategy.utils.log.SessionListener
    </listener-class>
          
    </listener>
    
</web-app>
